services:
  # The Unleash server contains the Unleash configuration and
  # communicates with server-side SDKs and the Unleash Proxy
  unleash:
    image: unleashorg/unleash-server:latest
    ports:
      - "4242:4242"
    environment:
      # This points Unleash to its backing database (defined in the `db` section below)
      DATABASE_URL: "postgres://postgres:unleash@db/db"
      # Disable SSL for database connections. @chriswk: why do we do this?
      DATABASE_SSL: "false"
      # Changing log levels:
      LOG_LEVEL: "warn"
      # Proxy clients must use one of these keys to connect to the
      # Proxy. To add more keys, separate them with a comma (`key1,key2`).
      INIT_FRONTEND_API_TOKENS: "default:development.unleash-insecure-frontend-api-token"
      # Initialize Unleash with a default set of client API tokens. To
      # initialize Unleash with multiple tokens, separate them with a
      # comma (`token1,token2`).
      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
      INIT_ADMIN_API_TOKENS: "*:*.unleash-insecure-admin-token"
      UNLEASH_DEFAULT_ADMIN_USERNAME: "user"
      UNLEASH_DEFAULT_ADMIN_PASSWORD: "pass"
      SEND_TELEMETRY: false
      CHECK_VERSION: false
    depends_on:
      db:
        condition: service_healthy
    command: ["node", "index.js"]
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
      interval: 1s
      timeout: 1m
      retries: 5
      start_period: 15s

  db:
    ports:
      - "5555:5432"
    expose:
      - "5432"
    image: postgres:15
    environment:
      # create a database called `db`
      POSTGRES_DB: "db"
      # trust incoming connections blindly (DON'T DO THIS IN PRODUCTION!)
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username=postgres",
          "--host=127.0.0.1",
          "--port=5432",
        ]
      interval: 2s
      timeout: 1m
      retries: 5
      start_period: 10s

  web:
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      UNLEASH_URL: http://unleash:4242/api
      UNLEASH_APP_NAME: my-go-api
      UNLEASH_INSTANCE_ID: test-instance-id # Optional
      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
      # INIT_CLIENT_API_TOKENS: "*:production.8c22e1cbf1c7302207e09e38cca715ac47e352e68e66137c7eba3195"
    depends_on:
      unleash:
        condition: service_healthy
